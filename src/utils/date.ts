import EnvVars from '@src/constants/EnvVars'

export function getToday() {
  const today = new Date()
  today.setUTCHours(0, 0, 0, 0)
  return today
}

export function getNext15Minutes(from = new Date()) {
  const next = new Date(from)
  next.setTime(next.getTime() + 15 * 60 * 1000)
  return next
}

export function getTomorrow(from = new Date()) {
  const tomorrow = new Date(from)
  tomorrow.setUTCDate(tomorrow.getUTCDate() + 1)
  tomorrow.setUTCHours(0, 0, 0, 0)
  return tomorrow
}

export function getNextWeek(from = new Date()) {
  const nextWeek = new Date(from)
  nextWeek.setUTCDate(nextWeek.getUTCDate() + 7)
  nextWeek.setUTCHours(0, 0, 0, 0)
  return nextWeek
}

export function getNextMonth(from = new Date()) {
  const nextMonth = new Date(from)
  nextMonth.setUTCMonth(nextMonth.getUTCMonth() + 1)
  nextMonth.setUTCHours(23, 59, 59, 0)
  return nextMonth
}

export function getTwoMonthsLater(from = new Date()) {
  const twoMonthsLater = new Date(from)
  twoMonthsLater.setUTCMonth(twoMonthsLater.getUTCMonth() + 2)

  return twoMonthsLater
}

export function getExpireDate(from = getAutoGenerateDate()) {
  const date = new Date(from)
  date.setUTCDate(date.getUTCDate() + EnvVars.Rules.DayOfService.expireDays)
  date.setUTCHours(0, 0) // expires at midnight of local time
  return date
}

export function getAutoGenerateDate() {
  const date = new Date()
  date.setUTCDate(date.getUTCDate() + EnvVars.Rules.DayOfService.rangeDays)
  date.setUTCHours(0, 0, 0, 0)
  return date
}

/**
 * Get list of dates
 * @param {Date} from - Date from (not including)
 * @param {Date} to - Date to (including)
 */
export function getDateList(from: Date, to: Date): Date[] {
  const dateList = []
  const currentDate = new Date(from) // Start with the next day from 'from'
  currentDate.setUTCHours(0, 0, 0, 0)
  currentDate.setUTCDate(currentDate.getUTCDate() + 1)

  while (currentDate <= to) {
    dateList.push(new Date(currentDate))
    currentDate.setUTCDate(currentDate.getUTCDate() + 1)
  }

  return dateList
}
